apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        applicationId "sample.vlayout"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的 SO 库构架，注意这里要根据你的实际情况来设置
            abiFilters 'armeabi-v7a'
            //abiFilters 'x86','armeabi-v7a'//, 'x86'  'armeabi','x86_64', 'arm64-v8a', 'mips', 'mips64'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    def gsyVideoVersion = '7.1.2'
    //implementation "com.shuyu:GSYVideoPlayer:$gsyVideoVersion"
    implementation "com.shuyu:gsyVideoPlayer-java:$gsyVideoVersion"
    implementation "com.shuyu:GSYVideoPlayer-exo2:$gsyVideoVersion"
    //更多配置版so，增加了concat,rtsp,mpeg，crypto
    implementation "com.shuyu:gsyVideoPlayer-ex_so:$gsyVideoVersion"

    //
    implementation "com.google.android.material:material:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "com.github.bumptech.glide:glide:4.10.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.61"

    implementation 'com.alibaba.android:tangram:2.0.5@aar'
    implementation ('com.alibaba.android:vlayout:1.2.36@aar') {
        transitive = true
    }
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'

    implementation 'com.google.code.gson:gson:2.8.6'
//    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50"


    // 必选，内部默认使用系统mediaplayer进行解码
//    implementation 'com.github.dueeeke.dkplayer:dkplayer-java:3.2.2'
//    // 可选，包含StandardVideoController的实现
//    implementation 'com.github.dueeeke.dkplayer:dkplayer-ui:3.2.2'
//    // 可选，使用exoplayer进行解码
//    implementation 'com.github.dueeeke.dkplayer:player-exo:3.2.2'
    // 可选，使用ijkplayer进行解码
    //implementation 'com.github.dueeeke.dkplayer:player-ijk:3.2.2'
    // 可选，如需要缓存或者抖音预加载功能请引入此库
    //implementation 'com.github.dueeeke.dkplayer:videocache:3.2.2'




    //---------如果仅使用MediaPlayer解码，使用以下依赖。----------
    //该依赖仅包含MediaPlayer解码
//    implementation 'com.kk.taurus.playerbase:playerbase:3.3.5'

    //---------如果使用ExoPlayer解码，使用以下依赖。---------
    //该依赖包含exoplayer解码和MediaPlayer解码
    //注意exoplayer的最小支持SDK版本为16
    //implementation 'cn.jiajunhui:exoplayer:335_291_009'

    //---------如果使用ijkPlayer解码，使用以下依赖。---------
    //该依赖包含ijkplayer解码和MediaPlayer解码
//    implementation 'cn.jiajunhui:ijkplayer:335_088_007'
//    //ijk官方的解码库依赖，较少格式版本且不支持HTTPS。
//    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'
    // Other ABIs: optional
//    implementation 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'
//    implementation 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'
}
